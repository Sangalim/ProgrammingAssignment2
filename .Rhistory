2+2
x <- list(a <- 1:5, b <- rnorm(10))
x
x[1,1]
x[1]
x[[1]]
x[[2]]
x[[2]][1]
lapply(x, mean)
lapply(x, mean)
k <- lapply(x, mean)
k
x <- list(a = 1:4, b = rnorm(10), c = rnorm(20, 1), d = rnorm(100,5))
x
k <- lappy(x, mean)
k <- lapply(x, mean)
k
$a
k$a
x <- list (a = matrix(1:4, 2, 2), b = matrix(1:6, 3, 2))
x
x$a
lapply(x, function(elt) elt[,1])
x <- list(a = 1:4, b = rnorm(10), c = rnorm(20, 1), d = rnorm(100,5))
lapply(x)
lapply(x, mean)
sapply(x, mean)
str(c)
x <- c(rnorm(10), runif(10), rnorm(10,1))
x
f <- gl(3, 10)
f
str(gl)
help(gl)
split(x, f)
getwd()
setwd("~/Documents/Coursera/Data Science/R Programming")
getwd()
x <- matrix(1:10, 5, 2)
x
y <- solve(x)
x <- matrix(1:9, 3, 3)
x
y <- solve(y)
y <- solve(x)
x <- matrix(rnorm(9), 3, 3)
x
y <- solve(x)
y
y * x
x * y
setwd("~/Documents/Coursera/Data Science/R Programming/Matrix")
getwd()
setwd("~/Documents/Coursera/Data Science/R Programming/Matrix/ProgrammingAssignment2")
source("cachematrix.R")
z <- makeCacheMatrix(1:4, 2, 2)
z <- makeCacheMatrix(matrix(1:4, 2, 2))
z
z.get
str(z)
z
print(z)
z.get()
z$get()
z
z
z()
z().get()
z()
z()
z <- makeCacheMatrix(matrix(1:4, 2, 2))
z
source("cachematrix.R")
z <- makeCacheMatrix(matrix(1:4, 2, 2))
z
z <- makeCacheMatrix(matrix(1:4, 2, 2))
z
z()
get,z()
get.z()
z()$get
source("cachematrix.R")
z <- NULL
z
z <- makeCacheMatrix(matrix(1:4, 2, 2))
z()
z
get(z)
get("z")
z$get
z
z
print(z)
z$get()
source("cachematrix.R")
z <- makeCacheMatrix(matrix(1:4, 2, 2))
source("cachematrix.R")
z <- makeCacheMatrix(matrix(1:4, 2, 2))
source("cachematrix.R")
z <- makeCacheMatrix(matrix(1:4, 2, 2))
source("cachematrix.R")
z <- makeCacheMatrix(matrix(1:4, 2, 2))
z$inverted
source("cachematrix.R")
z <- makeCacheMatrix(matrix(1:4, 2, 2))
help(return)
source("cachematrix.R")
z <- makeCacheMatrix(matrix(1:4, 2, 2))
z$get()
z$getinverted()
z$getinverted()
z$setinverted()
source("cachematrix.R")
z <- makeCacheMatrix(matrix(1:4, 2, 2))
z$getinverted()
z$setinverted()
source("cachematrix.R")
z <- makeCacheMatrix(matrix(1:4, 2, 2))
cacheSolve(z)
source("cachematrix.R")
z <- makeCacheMatrix(matrix(1:4, 2, 2))
cacheSolve(z)
cacheSolve(z)
cacheSolve(z)
